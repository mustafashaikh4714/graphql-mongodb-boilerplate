scalar Date

type Query {
  users(query: String): [User!]!
  todos: [Todo!]!
  todo(id: ID!): Todo!
  me: User!
}

type Mutation {
  createUser(data: CreateUserInput): User!
  updateUser(data: UpdateUserInput): User!
  deleteUser: String!
  createTodo(data: CreateTodoInput): Todo!
  updateTodo(data: UpdateTodoInput): Todo!
  deleteTodo(id: ID!): String!
  markTodoAsComplete(id: ID!): Todo!
  login(data: LoginInput): String!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}
input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  username: String!
  email: String!
}

type User {
  _id: ID!
  username: String!
  email: String!
  password: String!
  createdAt: Date!
  updatedAt: Date!
}

type Todo {
  _id: ID!
  title: String!
  body: String!
  isCompleted: Boolean!
  creator: User!
  createdAt: Date!
  updatedAt: Date!
}

input CreateTodoInput {
  title: String!
  body: String!
  isCompleted: Boolean!
}

input UpdateTodoInput {
  id: ID!
  title: String
  body: String
  isCompleted: Boolean
}
